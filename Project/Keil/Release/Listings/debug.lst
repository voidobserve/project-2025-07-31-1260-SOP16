C51 COMPILER V9.60.7.0   DEBUG                                                             07/31/2025 10:50:55 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\Release\Objects\debug.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\Source\debug.c LARGE OPTIMIZE(8,SPEED) BROWSE INTVECTOR(
                    -0X000C) INCDIR(..\..\Libraries\Include;..\..\User) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\debug.lst) OB
                    -JECT(.\Release\Objects\debug.obj)

line level    source

   1          /**
   2           ******************************************************************************
   3           * @file    debug.c
   4           * @author  HUGE-IC Application Team
   5           * @version V1.0.0
   6           * @date    01-05-2021
   7           * @brief   This file contains the debug function.
   8           ******************************************************************************
   9           * @attention
  10           *
  11           * <h2><center>&copy; COPYRIGHT 2021 HUGE-IC</center></h2>
  12           *
  13           *
  14           *
  15           ******************************************************************************
  16           */
  17          
  18          /* Includes ------------------------------------------------------------------*/
  19          #include "debug.h"
  20          #include "include.h"
  21          #include "my_config.h"
  22          
  23          /** @addtogroup Template_Project
  24           * @{
  25           */
  26          
  27          /* Private typedef -----------------------------------------------------------*/
  28          /* Private define ------------------------------------------------------------*/
  29          /* Private macro -------------------------------------------------------------*/
  30          /* Private variables ---------------------------------------------------------*/
  31          /* Private function prototypes -----------------------------------------------*/
  32          /* Private functions ---------------------------------------------------------*/
  33          
  34          // #if DBG_PRINTF_EN
  35          // // 重写puchar()函数
  36          // char putchar(char c)
  37          // {
  38          //     while (!(UART1_STA & UART_TX_DONE(0x01)))
  39          //         ;
  40          //     UART1_DATA = c;
  41          
  42          //     return c;
  43          // }
  44          // #endif
  45          
  46          /**
  47           * @brief  Debug puchar function
  48           * @param  uart_data : Data that needs to be sent
  49           * @retval None
  50           */
  51          // void debug_putchar(u8 uart_data)
  52          // {
  53          //     while (!(UART1_STA & UART_TX_DONE(0x01)))
C51 COMPILER V9.60.7.0   DEBUG                                                             07/31/2025 10:50:55 PAGE 2   

  54          //         ;
  55          //     UART1_DATA = uart_data;
  56          //     while (!(UART1_STA & UART_TX_DONE(0x01)))
  57          //         ;
  58          // }
  59          
  60          /**
  61           * @brief  Debug initialization function
  62           * @param  None
  63           * @retval None
  64           */
  65          // void debug_init(void)
  66          // {
  67              // u8 i = 0;
  68          
  69              // // TX---P30(R16)
  70          
  71              // P3_MD0   &= ~GPIO_P30_MODE_SEL(0x03);
  72              // P3_MD0   |=  GPIO_P30_MODE_SEL(0x01);
  73              // FOUT_S30  =  GPIO_FOUT_UART1_TX;
  74          
  75              // UART1_BAUD1 = (((SYSCLK-DEBUG_BAUD)/DEBUG_BAUD) >> 8) & 0xFF;
  76              // UART1_BAUD0 =  ((SYSCLK-DEBUG_BAUD)/DEBUG_BAUD)       & 0xFF;
  77              // UART1_CON0  = UART_EN(0x01);                                    // UART使能
  78          // }
  79          
  80          /**
  81           * @brief  Debug User printf function
  82           * @param  p_data : The string to send
  83           * @retval None
  84           */
  85          // void user_printf(char *p_data)
  86          // {
  87          //     while (*p_data != '\0')
  88          //     {
  89          //         debug_putchar(*p_data++);
  90          //     }
  91          // }
  92          
  93          /*************************** (C) COPYRIGHT 2021 HUGE-IC ***** END OF FILE *****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
